#!/bin/bash
#
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.

set -e

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

# Only add custom message when there is no commit source
# ($COMMIT_SOURCE is empty) or we come from a template.
# Otherwise, keep the default message proposed by Git.
# Possible commit source: message, template,
# merge, squash or commit. See https://git-scm.com/docs/githooks

case "$COMMIT_SOURCE,$SHA1" in
,|template,)
  ref=$(git rev-parse --abbrev-ref HEAD)
  ref=$(echo $ref | tr '[a-z]' '[A-Z]')
  echo "${ref}"
  if [[ $ref =~ ^(FEATURE|DEFECT)\/(.*) ]]; then
    ticket="${BASH_REMATCH[2]}"
    orig=$(cat "${COMMIT_MSG_FILE}")
    #orig=$(cat "${COMMIT_MSG_FILE}" | grep -v "^#")
    details=$(scripts/rally-details.py "${ticket}")
    echo "${details}" >"${COMMIT_MSG_FILE}"
    echo "${orig}" >>"${COMMIT_MSG_FILE}"
  fi
  ;;
*) ;;
esac
